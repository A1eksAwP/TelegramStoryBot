from str_class import BasicStr


class MyList(list):
    ...


class MySet(set):
    ...


class MyDict(dict):
    ...


class MyInt(int):
    ...


class MyFloat(float):
    ...


class MyTuple(tuple):
    ...


class MyByte(bytes):
    ...


DICT_HELP = {
    'ALL': [d.strip('__') for d in dir(dict)],
    'class': MyDict.__class__.__doc__,
    'class_getitem': MyDict.__class_getitem__.__doc__,
    'contains': MyDict.__contains__.__doc__,
    'delattr': MyDict.__delattr__.__doc__,
    'delitem': MyDict.__delitem__.__doc__,
    'dir': MyDict.__dir__.__doc__,
    'doc': MyDict.__doc__.__doc__,
    'eq': MyDict.__eq__.__doc__,
    'format': MyDict.__format__.__doc__,
    'ge': MyDict.__ge__.__doc__,
    'getattribute': MyDict.__getattribute__.__doc__,
    'getitem': MyDict.__getitem__.__doc__,
    'gt': MyDict.__gt__.__doc__,
    'hash': MyDict.__hash__.__doc__,
    'init': MyDict.__init__.__doc__,
    'init_subclass': MyDict.__init_subclass__.__doc__,
    'ior': MyDict.__ior__.__doc__,
    'iter': MyDict.__iter__.__doc__,
    'le': MyDict.__le__.__doc__,
    'len': MyDict.__len__.__doc__,
    'lt': MyDict.__lt__.__doc__,
    'ne': MyDict.__ne__.__doc__,
    'new': MyDict.__new__.__doc__,
    'or': MyDict.__or__.__doc__,
    'reduce': MyDict.__reduce__.__doc__,
    'reduce_ex': MyDict.__reduce_ex__.__doc__,
    'repr': MyDict.__repr__.__doc__,
    'reversed': MyDict.__reversed__.__doc__,
    'ror': MyDict.__ror__.__doc__,
    'setattr': MyDict.__setattr__.__doc__,
    'setitem': MyDict.__setitem__.__doc__,
    'sizeof': MyDict.__sizeof__.__doc__,
    'str': MyDict.__str__.__doc__,
    'clear': MyDict.clear.__doc__,
    'copy': MyDict.copy.__doc__,
    'fromkeys': MyDict.fromkeys.__doc__,
    'get': MyDict.get.__doc__,
    'items': MyDict.items.__doc__,
    'keys': MyDict.keys.__doc__,
    'pop': MyDict.pop.__doc__,
    'popitem': MyDict.popitem.__doc__,
    'setdefault': MyDict.setdefault.__doc__,
    'update': MyDict.update.__doc__,
    'values': MyDict.values.__doc__,
}

SET_HELP = {
    'ALL': [d.strip('__') for d in dir(set)],
    'and': MySet.__and__.__doc__,
    'class': MySet.__class__.__doc__,
    'class_getitem': MySet.__class_getitem__.__doc__,
    'contains': MySet.__contains__.__doc__,
    'delattr': MySet.__delattr__.__doc__,
    'dir': MySet.__dir__.__doc__,
    'doc': MySet.__doc__.__doc__,
    'eq': MySet.__eq__.__doc__,
    'format': MySet.__format__.__doc__,
    'ge': MySet.__ge__.__doc__,
    'getattribute': MySet.__getattribute__.__doc__,
    'gt': MySet.__gt__.__doc__,
    'hash': MySet.__hash__.__doc__,
    'iand': MySet.__iand__.__doc__,
    'init': MySet.__init__.__doc__,
    'init_subclass': MySet.__init_subclass__.__doc__,
    'ior': MySet.__ior__.__doc__,
    'isub': MySet.__isub__.__doc__,
    'iter': MySet.__iter__.__doc__,
    'ixor': MySet.__ixor__.__doc__,
    'le': MySet.__le__.__doc__,
    'len': MySet.__len__.__doc__,
    'lt': MySet.__lt__.__doc__,
    'ne': MySet.__ne__.__doc__,
    'new': MySet.__new__.__doc__,
    'or': MySet.__or__.__doc__,
    'reduce': MySet.__reduce__.__doc__,
    'reduce_ex': MySet.__reduce_ex__.__doc__,
    'repr': MySet.__repr__.__doc__,
    'ror': MySet.__ror__.__doc__,
    'setattr': MySet.__setattr__.__doc__,
    'sizeof': MySet.__sizeof__.__doc__,
    'str': MySet.__str__.__doc__,
    'sub': MySet.__sub__.__doc__,
    'xor': MySet.__xor__.__doc__,
    'add': MySet.add.__doc__,
    'clear': MySet.clear.__doc__,
    'copy': MySet.copy.__doc__,
    'difference': MySet.difference.__doc__,
    'difference_update': MySet.difference_update.__doc__,
    'discard': MySet.discard.__doc__,
    'intersection': MySet.intersection.__doc__,
    'intersection_update': MySet.intersection_update.__doc__,
    'isdisjoint': MySet.isdisjoint.__doc__,
    'issubset': MySet.issubset.__doc__,
    'issuperset': MySet.issuperset.__doc__,
    'pop': MySet.pop.__doc__,
    'remove': MySet.remove.__doc__,
    'symmetric_difference': MySet.symmetric_difference.__doc__,
    'symmetric_difference_update': MySet.symmetric_difference_update.__doc__,
    'union': MySet.union.__doc__,
    'update': MySet.update.__doc__,
}

LIST_HELP = {
    'ALL': [d.strip('__') for d in dir(list)],
    'add': MyList.__add__.__doc__,
    'class': MyList.__class__.__doc__,
    'class_getitem': MyList.__class_getitem__.__doc__,
    'contains': MyList.__contains__.__doc__,
    'delattr': MyList.__delattr__.__doc__,
    'delitem': MyList.__delitem__.__doc__,
    'dir': MyList.__dir__.__doc__,
    'doc': MyList.__doc__.__doc__,
    'eq': MyList.__eq__.__doc__,
    'format': MyList.__format__.__doc__,
    'ge': MyList.__ge__.__doc__,
    'getattribute': MyList.__getattribute__.__doc__,
    'getitem': MyList.__getitem__.__doc__,
    'gt': MyList.__gt__.__doc__,
    'hash': MyList.__hash__.__doc__,
    'iadd': MyList.__iadd__.__doc__,
    'imul': MyList.__imul__.__doc__,
    'init': MyList.__init__.__doc__,
    'init_subclass': MyList.__init_subclass__.__doc__,
    'iter': MyList.__iter__.__doc__,
    'le': MyList.__le__.__doc__,
    'len': MyList.__len__.__doc__,
    'lt': MyList.__lt__.__doc__,
    'mul': MyList.__mul__.__doc__,
    'ne': MyList.__ne__.__doc__,
    'new': MyList.__new__.__doc__,
    'reduce': MyList.__reduce__.__doc__,
    'reduce_ex': MyList.__reduce_ex__.__doc__,
    'repr': MyList.__repr__.__doc__,
    'reversed': MyList.__reversed__.__doc__,
    'rmul': MyList.__rmul__.__doc__,
    'setattr': MyList.__setattr__.__doc__,
    'setitem': MyList.__setitem__.__doc__,
    'sizeof': MyList.__sizeof__.__doc__,
    'str': MyList.__str__.__doc__,
    'append': MyList.append.__doc__,
    'clear': MyList.clear.__doc__,
    'copy': MyList.copy.__doc__,
    'count': MyList.count.__doc__,
    'extend': MyList.extend.__doc__,
    'index': MyList.index.__doc__,
    'insert': MyList.insert.__doc__,
    'pop': MyList.pop.__doc__,
    'remove': MyList.remove.__doc__,
    'reverse': MyList.reverse.__doc__,
    'sort': MyList.sort.__doc__,
}

STR_HELP = {
            'ALL': [d.strip('__') for d in dir(str)],
            'str': BasicStr.__doc__,
            'capitalize': BasicStr.capitalize.__doc__,
            'casefold': BasicStr.casefold.__doc__,
            'center': BasicStr.center.__doc__,
            'count': BasicStr.count.__doc__,
            'encode': BasicStr.encode.__doc__,
            'endswith': BasicStr.endswith.__doc__,
            'expandtabs': BasicStr.expandtabs.__doc__,
            'find': BasicStr.find.__doc__,
            'format': BasicStr.format.__doc__,
            'format_map': BasicStr.format_map.__doc__,
            'index': BasicStr.index.__doc__,
            'isalnum': BasicStr.isalnum.__doc__,
            'isalpha': BasicStr.isalpha.__doc__,
            'isascii': BasicStr.isascii.__doc__,
            'isdecimal': BasicStr.isdecimal.__doc__,
            'isdigit': BasicStr.isdigit.__doc__,
            'isidentifier': BasicStr.isidentifier.__doc__,
            'islower': BasicStr.islower.__doc__,
            'isnumeric': BasicStr.isnumeric.__doc__,
            'isprintable': BasicStr.isprintable.__doc__,
            'isspace': BasicStr.isspace.__doc__,
            'istitle': BasicStr.istitle.__doc__,
            'isupper': BasicStr.isupper.__doc__,
            'join': BasicStr.join.__doc__,
            'ljust': BasicStr.ljust.__doc__,
            'lower': BasicStr.lower.__doc__,
            'lstrip': BasicStr.lstrip.__doc__,
            'maketrans': BasicStr.maketrans.__doc__,
            'partition': BasicStr.partition.__doc__,
            'removeprefix': BasicStr.removeprefix.__doc__,
            'removesuffix': BasicStr.removesuffix.__doc__,
            'replace': BasicStr.replace.__doc__,
            'rfind': BasicStr.rfind.__doc__,
            'rindex': BasicStr.rindex.__doc__,
            'rjust': BasicStr.rjust.__doc__,
            'rpartition': BasicStr.rpartition.__doc__,
            'rsplit': BasicStr.rsplit.__doc__,
            'rstrip': BasicStr.rstrip.__doc__,
            'split': BasicStr.split.__doc__,
            'splitlines': BasicStr.splitlines.__doc__,
            'startswith': BasicStr.startswith.__doc__,
            'strip': BasicStr.strip.__doc__,
            'swapcase': BasicStr.swapcase.__doc__,
            'title': BasicStr.title.__doc__,
            'translate': BasicStr.translate.__doc__,
            'upper': BasicStr.upper.__doc__,
            'zfill': BasicStr.zfill.__doc__
            }

INT_HELP = {
    'ALL': [d.strip('__') for d in dir(int)],
    'abs': MyInt.__abs__.__doc__,
    'add': MyInt.__add__.__doc__,
    'and': MyInt.__and__.__doc__,
    'bool': MyInt.__bool__.__doc__,
    'ceil': MyInt.__ceil__.__doc__,
    'class': MyInt.__class__.__doc__,
    'delattr': MyInt.__delattr__.__doc__,
    'dir': MyInt.__dir__.__doc__,
    'divmod': MyInt.__divmod__.__doc__,
    'doc': MyInt.__doc__.__doc__,
    'eq': MyInt.__eq__.__doc__,
    'float': MyInt.__float__.__doc__,
    'floor': MyInt.__floor__.__doc__,
    'floordiv': MyInt.__floordiv__.__doc__,
    'format': MyInt.__format__.__doc__,
    'ge': MyInt.__ge__.__doc__,
    'getattribute': MyInt.__getattribute__.__doc__,
    'getnewargs': MyInt.__getnewargs__.__doc__,
    'gt': MyInt.__gt__.__doc__,
    'hash': MyInt.__hash__.__doc__,
    'index': MyInt.__index__.__doc__,
    'init': MyInt.__init__.__doc__,
    'init_subclass': MyInt.__init_subclass__.__doc__,
    'int': MyInt.__int__.__doc__,
    'invert': MyInt.__invert__.__doc__,
    'le': MyInt.__le__.__doc__,
    'lshift': MyInt.__lshift__.__doc__,
    'lt': MyInt.__lt__.__doc__,
    'mod': MyInt.__mod__.__doc__,
    'mul': MyInt.__mul__.__doc__,
    'ne': MyInt.__ne__.__doc__,
    'neg': MyInt.__neg__.__doc__,
    'new': MyInt.__new__.__doc__,
    'or': MyInt.__or__.__doc__,
    'pos': MyInt.__pos__.__doc__,
    'pow': MyInt.__pow__.__doc__,
    'radd': MyInt.__radd__.__doc__,
    'rand': MyInt.__rand__.__doc__,
    'rdivmod': MyInt.__rdivmod__.__doc__,
    'reduce': MyInt.__reduce__.__doc__,
    'reduce_ex': MyInt.__reduce_ex__.__doc__,
    'repr': MyInt.__repr__.__doc__,
    'rfloordiv': MyInt.__rfloordiv__.__doc__,
    'rlshift': MyInt.__rlshift__.__doc__,
    'rmod': MyInt.__rmod__.__doc__,
    'rmul': MyInt.__rmul__.__doc__,
    'ror': MyInt.__ror__.__doc__,
    'round': MyInt.__round__.__doc__,
    'rpow': MyInt.__rpow__.__doc__,
    'rrshift': MyInt.__rrshift__.__doc__,
    'rshift': MyInt.__rshift__.__doc__,
    'rsub': MyInt.__rsub__.__doc__,
    'rtruediv': MyInt.__rtruediv__.__doc__,
    'rxor': MyInt.__rxor__.__doc__,
    'setattr': MyInt.__setattr__.__doc__,
    'sizeof': MyInt.__sizeof__.__doc__,
    'str': MyInt.__str__.__doc__,
    'sub': MyInt.__sub__.__doc__,
    'truediv': MyInt.__truediv__.__doc__,
    'trunc': MyInt.__trunc__.__doc__,
    'xor': MyInt.__xor__.__doc__,
    'as_integer_ratio': MyInt.as_integer_ratio.__doc__,
    'bit_count': MyInt.bit_count.__doc__,
    'bit_length': MyInt.bit_length.__doc__,
    'conjugate': MyInt.conjugate.__doc__,
    'denominator': MyInt.denominator.__doc__,
    'from_bytes': MyInt.from_bytes.__doc__,
    'imag': MyInt.imag.__doc__,
    'numerator': MyInt.numerator.__doc__,
    'real': MyInt.real.__doc__,
    'to_bytes': MyInt.to_bytes.__doc__,
}

FLOAT_HELP = {
    'ALL': [d.strip('__') for d in dir(float)],
    'abs': MyFloat.__abs__.__doc__,
    'add': MyFloat.__add__.__doc__,
    'bool': MyFloat.__bool__.__doc__,
    'ceil': MyFloat.__ceil__.__doc__,
    'class': MyFloat.__class__.__doc__,
    'delattr': MyFloat.__delattr__.__doc__,
    'dir': MyFloat.__dir__.__doc__,
    'divmod': MyFloat.__divmod__.__doc__,
    'doc': MyFloat.__doc__.__doc__,
    'eq': MyFloat.__eq__.__doc__,
    'float': MyFloat.__float__.__doc__,
    'floor': MyFloat.__floor__.__doc__,
    'floordiv': MyFloat.__floordiv__.__doc__,
    'format': MyFloat.__format__.__doc__,
    'ge': MyFloat.__ge__.__doc__,
    'getattribute': MyFloat.__getattribute__.__doc__,
    'getnewargs': MyFloat.__getnewargs__.__doc__,
    'gt': MyFloat.__gt__.__doc__,
    'hash': MyFloat.__hash__.__doc__,
    'init': MyFloat.__init__.__doc__,
    'init_subclass': MyFloat.__init_subclass__.__doc__,
    'int': MyFloat.__int__.__doc__,
    'le': MyFloat.__le__.__doc__,
    'lt': MyFloat.__lt__.__doc__,
    'mod': MyFloat.__mod__.__doc__,
    'mul': MyFloat.__mul__.__doc__,
    'ne': MyFloat.__ne__.__doc__,
    'neg': MyFloat.__neg__.__doc__,
    'new': MyFloat.__new__.__doc__,
    'pos': MyFloat.__pos__.__doc__,
    'pow': MyFloat.__pow__.__doc__,
    'radd': MyFloat.__radd__.__doc__,
    'rdivmod': MyFloat.__rdivmod__.__doc__,
    'reduce': MyFloat.__reduce__.__doc__,
    'reduce_ex': MyFloat.__reduce_ex__.__doc__,
    'repr': MyFloat.__repr__.__doc__,
    'rfloordiv': MyFloat.__rfloordiv__.__doc__,
    'rmod': MyFloat.__rmod__.__doc__,
    'rmul': MyFloat.__rmul__.__doc__,
    'round': MyFloat.__round__.__doc__,
    'rpow': MyFloat.__rpow__.__doc__,
    'rsub': MyFloat.__rsub__.__doc__,
    'rtruediv': MyFloat.__rtruediv__.__doc__,
    'setattr': MyFloat.__setattr__.__doc__,
    'sizeof': MyFloat.__sizeof__.__doc__,
    'str': MyFloat.__str__.__doc__,
    'sub': MyFloat.__sub__.__doc__,
    'truediv': MyFloat.__truediv__.__doc__,
    'trunc': MyFloat.__trunc__.__doc__,
    'as_integer_ratio': MyFloat.as_integer_ratio.__doc__,
    'conjugate': MyFloat.conjugate.__doc__,
    'fromhex': MyFloat.fromhex.__doc__,
    'hex': MyFloat.hex.__doc__,
    'imag': MyFloat.imag.__doc__,
    'is_integer': MyFloat.is_integer.__doc__,
    'real': MyFloat.real.__doc__,
}

TUPLE_HELP = {
    'ALL': [d.strip('__') for d in dir(tuple)],
    'add': MyTuple.__add__.__doc__,
    'class': MyTuple.__class__.__doc__,
    'class_getitem': MyTuple.__class_getitem__.__doc__,
    'contains': MyTuple.__contains__.__doc__,
    'delattr': MyTuple.__delattr__.__doc__,
    'dir': MyTuple.__dir__.__doc__,
    'doc': MyTuple.__doc__.__doc__,
    'eq': MyTuple.__eq__.__doc__,
    'format': MyTuple.__format__.__doc__,
    'ge': MyTuple.__ge__.__doc__,
    'getattribute': MyTuple.__getattribute__.__doc__,
    'getitem': MyTuple.__getitem__.__doc__,
    'gt': MyTuple.__gt__.__doc__,
    'hash': MyTuple.__hash__.__doc__,
    'init': MyTuple.__init__.__doc__,
    'init_subclass': MyTuple.__init_subclass__.__doc__,
    'iter': MyTuple.__iter__.__doc__,
    'le': MyTuple.__le__.__doc__,
    'len': MyTuple.__len__.__doc__,
    'lt': MyTuple.__lt__.__doc__,
    'mul': MyTuple.__mul__.__doc__,
    'ne': MyTuple.__ne__.__doc__,
    'new': MyTuple.__new__.__doc__,
    'reduce': MyTuple.__reduce__.__doc__,
    'reduce_ex': MyTuple.__reduce_ex__.__doc__,
    'repr': MyTuple.__repr__.__doc__,
    'rmul': MyTuple.__rmul__.__doc__,
    'setattr': MyTuple.__setattr__.__doc__,
    'sizeof': MyTuple.__sizeof__.__doc__,
    'str': MyTuple.__str__.__doc__,
    'count': MyTuple.count.__doc__,
    'index': MyTuple.index.__doc__,
}

BYTE_HELP = {
    'ALL': [d.strip('__') for d in dir(bytes)],
    'add': MyByte.__add__.__doc__,
    'class': MyByte.__class__.__doc__,
    'contains': MyByte.__contains__.__doc__,
    'delattr': MyByte.__delattr__.__doc__,
    'dir': MyByte.__dir__.__doc__,
    'doc': MyByte.__doc__.__doc__,
    'eq': MyByte.__eq__.__doc__,
    'format': MyByte.__format__.__doc__,
    'ge': MyByte.__ge__.__doc__,
    'getattribute': MyByte.__getattribute__.__doc__,
    'getitem': MyByte.__getitem__.__doc__,
    'getnewargs': MyByte.__getnewargs__.__doc__,
    'gt': MyByte.__gt__.__doc__,
    'hash': MyByte.__hash__.__doc__,
    'init': MyByte.__init__.__doc__,
    'init_subclass': MyByte.__init_subclass__.__doc__,
    'iter': MyByte.__iter__.__doc__,
    'le': MyByte.__le__.__doc__,
    'len': MyByte.__len__.__doc__,
    'lt': MyByte.__lt__.__doc__,
    'mod': MyByte.__mod__.__doc__,
    'mul': MyByte.__mul__.__doc__,
    'ne': MyByte.__ne__.__doc__,
    'new': MyByte.__new__.__doc__,
    'reduce': MyByte.__reduce__.__doc__,
    'reduce_ex': MyByte.__reduce_ex__.__doc__,
    'repr': MyByte.__repr__.__doc__,
    'rmul': MyByte.__rmul__.__doc__,
    'setattr': MyByte.__setattr__.__doc__,
    'sizeof': MyByte.__sizeof__.__doc__,
    'str': MyByte.__str__.__doc__,
    'capitalize': MyByte.capitalize.__doc__,
    'center': MyByte.center.__doc__,
    'count': MyByte.count.__doc__,
    'decode': MyByte.decode.__doc__,
    'endswith': MyByte.endswith.__doc__,
    'expandtabs': MyByte.expandtabs.__doc__,
    'find': MyByte.find.__doc__,
    'fromhex': MyByte.fromhex.__doc__,
    'hex': MyByte.hex.__doc__,
    'index': MyByte.index.__doc__,
    'isalnum': MyByte.isalnum.__doc__,
    'isalpha': MyByte.isalpha.__doc__,
    'isascii': MyByte.isascii.__doc__,
    'isdigit': MyByte.isdigit.__doc__,
    'islower': MyByte.islower.__doc__,
    'isspace': MyByte.isspace.__doc__,
    'istitle': MyByte.istitle.__doc__,
    'isupper': MyByte.isupper.__doc__,
    'join': MyByte.join.__doc__,
    'ljust': MyByte.ljust.__doc__,
    'lower': MyByte.lower.__doc__,
    'lstrip': MyByte.lstrip.__doc__,
    'maketrans': MyByte.maketrans.__doc__,
    'partition': MyByte.partition.__doc__,
    'removeprefix': MyByte.removeprefix.__doc__,
    'removesuffix': MyByte.removesuffix.__doc__,
    'replace': MyByte.replace.__doc__,
    'rfind': MyByte.rfind.__doc__,
    'rindex': MyByte.rindex.__doc__,
    'rjust': MyByte.rjust.__doc__,
    'rpartition': MyByte.rpartition.__doc__,
    'rsplit': MyByte.rsplit.__doc__,
    'rstrip': MyByte.rstrip.__doc__,
    'split': MyByte.split.__doc__,
    'splitlines': MyByte.splitlines.__doc__,
    'startswith': MyByte.startswith.__doc__,
    'strip': MyByte.strip.__doc__,
    'swapcase': MyByte.swapcase.__doc__,
    'title': MyByte.title.__doc__,
    'translate': MyByte.translate.__doc__,
    'upper': MyByte.upper.__doc__,
    'zfill': MyByte.zfill.__doc__,

}
